<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.talents.mapper.UserOccupationalMapper">
    
    <resultMap type="UserOccupational" id="UserOccupationalResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="category"    column="category"    />
        <result property="titleName"    column="title_name"    />
        <result property="titleNumber"    column="title_number"    />
        <result property="titleGrade"    column="title_grade"    />
    </resultMap>

    <sql id="selectUserOccupationalVo">
        select id, user_id, category, title_name, title_number, title_grade from user_occupational
    </sql>

    <select id="selectUserOccupationalList" parameterType="UserOccupational" resultMap="UserOccupationalResult">
        <include refid="selectUserOccupationalVo"/>
        <where>  
            <if test="userId != null  and userId != ''"> and user_id = #{userId}</if>
            <if test="category != null  and category != ''"> and category = #{category}</if>
            <if test="titleName != null  and titleName != ''"> and title_name like concat('%', #{titleName}, '%')</if>
            <if test="titleNumber != null  and titleNumber != ''"> and title_number = #{titleNumber}</if>
            <if test="titleGrade != null  and titleGrade != ''"> and title_grade = #{titleGrade}</if>
        </where>
    </select>
    
    <select id="selectUserOccupationalById" parameterType="Long" resultMap="UserOccupationalResult">
        <include refid="selectUserOccupationalVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertUserOccupational" parameterType="UserOccupational" useGeneratedKeys="true" keyProperty="id">
        insert into user_occupational
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="category != null">category,</if>
            <if test="titleName != null">title_name,</if>
            <if test="titleNumber != null">title_number,</if>
            <if test="titleGrade != null">title_grade,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="category != null">#{category},</if>
            <if test="titleName != null">#{titleName},</if>
            <if test="titleNumber != null">#{titleNumber},</if>
            <if test="titleGrade != null">#{titleGrade},</if>
         </trim>
    </insert>

    <update id="updateUserOccupational" parameterType="UserOccupational">
        update user_occupational
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="category != null">category = #{category},</if>
            <if test="titleName != null">title_name = #{titleName},</if>
            <if test="titleNumber != null">title_number = #{titleNumber},</if>
            <if test="titleGrade != null">title_grade = #{titleGrade},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteUserOccupationalById" parameterType="Long">
        delete from user_occupational where id = #{id}
    </delete>

    <delete id="deleteUserOccupationalByIds" parameterType="String">
        delete from user_occupational where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>